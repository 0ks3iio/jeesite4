<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件（谁先加载，谁优先级越高，jeesite.yml的优先级高于jeesite-core.yml）-->
	<bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
		<property name="resources">
			<array><value>classpath:jeesite-core.yml</value>
			<value>classpath:jeesite.yml</value></array>
		</property>
	</bean>
	<context:property-placeholder properties-ref="yamlProperties" ignore-unresolvable="true"/>
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" validator="beanValidator">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<bean class="com.jeesite.common.web.converter.JsonHttpMessageConverter">
                <property name="prettyPrint" value="false"/>
            </bean>
			<!-- 将Jackson2XmlHttpMessageConverter的默认格式化输出为false -->
			<bean class="com.jeesite.common.web.converter.XmlHttpMessageConverter">
                <property name="prettyPrint" value="false"/>
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <value>
				json=application/json
				xml=application/xml
			</value>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/><!-- 忽略accept-header匹配，不加后缀使用默认配置 -->
        <property name="favorPathExtension" value="true"/><!-- .json、.xml后缀匹配 -->
        <property name="favorParameter" value="false"/><!-- format参数名匹配 -->
	</bean>
	
	<!-- 定义视图文件解析 -->
	<mvc:view-resolvers>
		<!-- Beetl主题视图解析器（order越小优先级越高） -->
		<bean name="viewResolverBeetlThemes" class="com.jeesite.common.beetl.view.BeetlViewResolver">
			<property name="prefix" value="/themes/${web.view.themeName}/"/>
			<property name="suffix" value=".html" />
			<property name="order" value="1000" />
		</bean>
		<!-- Beetl默认视图文件解析（order越小优先级越高） -->
		<bean name="viewResolverBeetlDefault" class="com.jeesite.common.beetl.view.BeetlViewResolver">
			<property name="prefix" value="/"/>
			<property name="suffix" value=".html" />
			<property name="order" value="2000" />
		</bean>
		<!-- JSP主题视图文件解析（order越小优先级越高） -->
		<bean id="viewResolverJspThemes" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="viewClass" value="com.jeesite.common.web.view.JstlView" />
			<property name="prefix" value="/WEB-INF/views/themes/${web.view.themeName}/"/>
			<property name="suffix" value=".jsp"/>
			<property name="order" value="10000"/>
		</bean>
		<!-- JSP视图文件解析 （order越小优先级越高）-->
		<bean id="viewResolverJspDefault" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="viewClass" value="com.jeesite.common.web.view.JstlView" />
			<property name="prefix" value="/WEB-INF/views/"/>
			<property name="suffix" value=".jsp"/>
			<property name="order" value="20000"/>
		</bean>
		<!-- 默认视图定义，根据后缀渲染 -->
		<mvc:content-negotiation>
			<mvc:default-views>
				<bean class="com.jeesite.common.web.view.JsonView">
	                <property name="prettyPrint" value="false"/>
	            </bean>
				<bean class="com.jeesite.common.web.view.XmlView">
	                <property name="prettyPrint" value="false"/>
	            </bean>
			</mvc:default-views>
		</mvc:content-negotiation>
	</mvc:view-resolvers>
	
	<!-- 直接访问项目名称跳转到默认地址 -->
	<mvc:view-controller path="/" view-name="redirect:${defaultPath}"/>
    
    <!-- 静态资源映射，可读取classes下、jar包里的静态文件 -->
    <mvc:resources mapping="/static/**" location="/static/,classpath:/static/" cache-period="31536000"/>
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>
	
	<!-- 异常拦截，处理异常信息，其它异常拦截见BaseController里的@ExceptionHandler注解 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">error/403</prop>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
		</property>
	</bean>
	
	<!-- Spring MVC上传文件  MultipartFile 拦截，设置字符集 -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="defaultEncoding" value="UTF-8" />  
	</bean>
	
</beans>